import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id "de.mannodermaus.android-junit5" version "1.9.3.0"
	id 'org.jetbrains.kotlin.plugin.serialization' version '2.1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'org.jetbrains.kotlin.plugin.compose'

def androidKeyStorePassword = hasProperty('androidKeyStorePassword') ? androidKeyStorePassword : null
def hasKeyStorePassword = { androidKeyStorePassword != null && !androidKeyStorePassword.isEmpty() }
if (!hasKeyStorePassword()) {
	androidKeyStorePassword = System.getenv('ANDROID_KEY_STORE_PASSWORD')
}

def androidStorePassword = hasProperty('androidStorePassword') ? androidStorePassword : ""
def hasAndroidStorePassword = { androidStorePassword != null && !androidStorePassword.isEmpty() }
if (!hasAndroidStorePassword()) {
	androidStorePassword = System.getenv('ANDROID_STORE_PASSWORD')
}

def isSignedExternally = { hasKeyStorePassword() && hasAndroidStorePassword() }

android {
    compileSdk 35

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 35
		versionName gitVersion()
		archivesBaseName = "project-blue-" + gitVersion()
	}

	signingConfigs {
		debug {
			// You need to specify either an absolute path or include the
			// keystore file in the same directory as the build.gradle file.
			storeFile file("androidstore")
			storePassword androidStorePassword
			keyAlias "store"
			keyPassword androidKeyStorePassword
		}
		release {
			// You need to specify either an absolute path or include the
			// keystore file in the same directory as the build.gradle file.
			storeFile file("androidstore")
			storePassword androidStorePassword
			keyAlias "store"
			keyPassword androidKeyStorePassword
		}
	}

	buildFeatures {
		compose = true
		buildConfig = true
	}

	compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11

		coreLibraryDesugaringEnabled = true
	}

	kotlinOptions {
		jvmTarget = '11'
	}

	buildTypes {
        debug {
            minifyEnabled false
			signingConfig = (isSignedExternally() ? signingConfigs.debug : signingConfig)
		}
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
			signingConfig (isSignedExternally() ? signingConfigs.release : signingConfig)
			ndk {
				debugSymbolLevel = 'SYMBOL_TABLE'
			}
        }
    }

    packagingOptions {
        resources {
            excludes += ['META-INF/LICENSE.txt', 'META-INF/NOTICE.txt', 'META-INF/INDEX.LIST']
			resources {
				excludes += '/META-INF/{AL2.0,LGPL2.1}'
			}
		}
    }

    defaultConfig {

		versionCode getGeneratedVersionCode()
		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
		vectorDrawables {
			useSupportLibrary true
		}
	}

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
			all {
				maxHeapSize = "2048m"
				maxParallelForks = 3
			}
		}
	}

    lint {
        abortOnError false
    }

	namespace 'com.lasthopesoftware.bluewater'
}

tasks.withType(KotlinCompile).configureEach {
	compilerOptions {
		freeCompilerArgs.add("-opt-in=kotlin.RequiresOptIn")
	}
}

def gitVersion() {
	try {
		def gitDescribe = providers.exec {
			it.ignoreExitValue = true
			commandLine("git", "describe")
		}.standardOutput.asText.get().trim()

		def latestTag = providers.exec {
			it.ignoreExitValue = true
			commandLine("git", "describe", "--abbrev=0")
		}.standardOutput.asText.get().trim()

		if (gitDescribe != latestTag) {
			return latestTag + "-SNAPSHOT"
		}

		return gitDescribe
	} catch (ignored) {
		return "0.0.1"
	}
}

def getGeneratedVersionCode() {
    // should result in the same value as running
    // git rev-list <checked out branch name> | wc -l
    def initialVersionCode = 3761 // the initial version code before tags were used to increment version code

	try {
		def numberOfReleases = providers.exec {
			it.ignoreExitValue = true
			commandLine("sh", "-c", "git tag | wc -l")
		}.standardOutput.asText.get() as Integer
		return numberOfReleases + initialVersionCode
	} catch (ignored) {
		return initialVersionCode
	}
}

dependencies {
	def compose_version = '1.8.2'
	def media3_version = '1.6.1'
	def lifecycle_version = '2.9.0'
	def junit5_version = '5.12.2'

	coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.5'

	implementation 'androidx.core:core-ktx:1.16.0'
	implementation 'androidx.annotation:annotation:1.9.1'
	implementation 'androidx.work:work-runtime:2.10.1'
	implementation 'androidx.media:media:1.7.0'
	implementation 'androidx.palette:palette-ktx:1.0.0'
	implementation 'androidx.preference:preference-ktx:1.2.1'
	implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
	implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"
	implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"
	implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
	implementation "androidx.startup:startup-runtime:1.2.0"
	implementation 'com.google.android.material:material:1.12.0'
	implementation 'com.google.guava:guava:33.4.8-android'
	implementation 'joda-time:joda-time:2.14.0'
	implementation 'commons-io:commons-io:2.19.0'
	implementation 'org.slf4j:slf4j-api:2.0.17'
	implementation 'com.github.tony19:logback-android:3.0.0'
	implementation 'com.namehillsoftware:handoff:0.30.1'
	implementation 'io.reactivex.rxjava3:rxjava:3.1.10'
	implementation 'com.namehillsoftware:lazy-j:0.11.0'
	implementation 'org.jsoup:jsoup:1.20.1'
	implementation "androidx.media3:media3-exoplayer:$media3_version"
	implementation "androidx.media3:media3-datasource-okhttp:$media3_version"
	implementation 'com.squareup.okio:okio:3.11.0'
	implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.14'
	implementation 'com.namehillsoftware:querydroid:0.6.0'
	implementation "androidx.compose.ui:ui:$compose_version"
	implementation "androidx.compose.material:material:$compose_version"
	implementation "androidx.compose.ui:ui-tooling:$compose_version"
	implementation "androidx.compose.runtime:runtime-rxjava3:$compose_version"
	implementation 'androidx.activity:activity-compose:1.10.1'
	implementation 'dev.olshevski.navigation:reimagined:1.5.0'
	implementation 'com.google.code.gson:gson:2.13.1'
	debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
	debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
	testCompileOnly 'junit:junit:4.13.2'
	testImplementation 'commons-codec:commons-codec:1.18.0'
	testImplementation "org.junit.jupiter:junit-jupiter-api:$junit5_version"
	testImplementation 'org.assertj:assertj-core:3.27.3'
	testImplementation 'org.robolectric:robolectric:4.14.1'
	testImplementation 'androidx.test.ext:junit-ktx:1.2.1'
	testImplementation 'androidx.test:core:1.6.1'
	testImplementation 'androidx.test:runner:1.6.2'
	testImplementation 'io.mockk:mockk:1.14.2'
	testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.10.2'
	testImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
	testRuntimeOnly "org.junit.platform:junit-platform-launcher"
	testRuntimeOnly "org.junit.vintage:junit-vintage-engine"
	androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
	androidTestImplementation "org.assertj:assertj-core:3.27.3"
	androidTestImplementation 'androidx.test.ext:junit-ktx:1.2.1'
	androidTestImplementation 'androidx.test:core:1.6.1'
	androidTestImplementation 'androidx.test:runner:1.6.2'
}
