import org.ajoberstar.grgit.Grgit

apply plugin: 'com.android.application'
apply plugin: 'com.cinnober.gradle.semver-git'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'de.mannodermaus.android-junit5'

def androidKeyStorePassword = hasProperty('androidKeyStorePassword') ? androidKeyStorePassword : null
def hasKeyStorePassword = { androidKeyStorePassword != null && !androidKeyStorePassword.isEmpty() }
if (!hasKeyStorePassword()) {
	androidKeyStorePassword = System.getenv('ANDROID_KEY_STORE_PASSWORD')
}

def androidStorePassword = hasProperty('androidStorePassword') ? androidStorePassword : ""
def hasAndroidStorePassword = { androidStorePassword != null && !androidStorePassword.isEmpty() }
if (!hasAndroidStorePassword()) {
	androidStorePassword = System.getenv('ANDROID_STORE_PASSWORD')
}

def isSignedExternally = { hasKeyStorePassword() && hasAndroidStorePassword() }

def compose_version = '1.2.0'

android {
    compileSdkVersion 32
    buildToolsVersion '32.0.0'

    defaultConfig {
        applicationId "com.lasthopesoftware.bluewater"
        minSdkVersion 21
        targetSdkVersion 32
		versionName project.version
		archivesBaseName = "project-blue-" + project.version
	}

	signingConfigs {
		debug {
			// You need to specify either an absolute path or include the
			// keystore file in the same directory as the build.gradle file.
			storeFile file("androidstore")
			storePassword androidStorePassword
			keyAlias "store"
			keyPassword androidKeyStorePassword
		}
		release {
			// You need to specify either an absolute path or include the
			// keystore file in the same directory as the build.gradle file.
			storeFile file("androidstore")
			storePassword androidStorePassword
			keyAlias "store"
			keyPassword androidKeyStorePassword
		}
	}

	buildFeatures {
		compose = true
	}

	compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

	kotlinOptions {
		jvmTarget = '11'
	}

	buildTypes {
        debug {
            minifyEnabled false
			signingConfig = (isSignedExternally() ? signingConfigs.debug : signingConfig)
		}
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
			signingConfig (isSignedExternally() ? signingConfigs.release : signingConfig)
        }
    }

    packagingOptions {
        resources {
            excludes += ['META-INF/LICENSE.txt', 'META-INF/NOTICE.txt', 'META-INF/INDEX.LIST']
			resources {
				excludes += '/META-INF/{AL2.0,LGPL2.1}'
			}
		}
    }

    defaultConfig {

		versionCode getGeneratedVersionCode()
		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
		vectorDrawables {
			useSupportLibrary true
		}
	}

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
			all {
				maxHeapSize = "1024m"
				maxParallelForks = 2
			}
		}
	}

    lint {
        abortOnError false
    }

	buildFeatures {
		dataBinding true
	}

	composeOptions {
		kotlinCompilerExtensionVersion compose_version
	}
	namespace 'com.lasthopesoftware.bluewater'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
	kotlinOptions {
		freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
	}
}

def getGeneratedVersionCode() {
    // current dir is <your proj>/app, so it's likely that all your git repo files are in the dir
    // above.
    ext.repo = Grgit.open(project.file('..'))

    // should result in the same value as running
    // git rev-list <checked out branch name> | wc -l
    def initialVersionCode = 3761 // the initial version code before tags were used to increment version code
    def numberOfReleases = ext.repo.tag.list().size()
    return numberOfReleases + initialVersionCode
}

dependencies {
	def exoplayer_version = '2.18.1'
	def core_version = '1.8.0'
	def lifecycle_version = '2.5.1'
	def junit5_version = '5.9.0'

	implementation "androidx.core:core-ktx:$core_version"
	implementation 'androidx.annotation:annotation:1.4.0'
	implementation 'androidx.work:work-runtime:2.7.1'
	implementation 'androidx.media:media:1.6.0'
	implementation 'androidx.palette:palette-ktx:1.0.0'
	implementation 'androidx.preference:preference-ktx:1.2.0'
	implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
	implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"
	implementation 'com.google.android.material:material:1.6.1'
	implementation 'com.google.guava:guava:30.1-android'
	implementation 'joda-time:joda-time:2.10.13'
	implementation 'commons-io:commons-io:2.8.0'
	implementation 'org.slf4j:slf4j-api:1.7.30'
	implementation 'com.github.tony19:logback-android:2.0.0'
	implementation 'com.namehillsoftware:handoff:0.19.6'
	implementation 'io.reactivex.rxjava2:rxjava:2.2.21'
	implementation 'com.namehillsoftware:lazy-j:0.11.0'
	implementation 'com.github.danrien:xmlwise:-SNAPSHOT'
	implementation "com.google.android.exoplayer:exoplayer-core:${exoplayer_version}"
	implementation "com.google.android.exoplayer:extension-okhttp:${exoplayer_version}"
	implementation 'com.squareup.okio:okio:2.10.0'
	implementation 'com.squareup.okhttp3:okhttp:4.9.2'
	implementation 'com.github.namehillsoftware:artful:0.3.0'
	implementation "androidx.compose.ui:ui:$compose_version"
	implementation "androidx.compose.material:material:$compose_version"
	implementation "androidx.compose.ui:ui-tooling:$compose_version"
	implementation 'com.google.accompanist:accompanist-systemuicontroller:0.23.1'
	implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
	implementation "androidx.activity:activity-compose:1.5.1"
	implementation "androidx.compose.compiler:compiler:$compose_version"
	implementation "me.onebone:toolbar-compose:2.3.4"
	debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
	testImplementation 'androidx.test.ext:junit:1.1.3'
	testImplementation 'junit:junit:4.13.2'
	testImplementation "org.junit.jupiter:junit-jupiter-api:$junit5_version"
	testImplementation 'org.assertj:assertj-core:3.22.0'
	testImplementation 'org.robolectric:robolectric:4.7.3'
	testImplementation 'commons-codec:commons-codec:1.15'
	testImplementation 'androidx.test:core:1.4.0'
	testImplementation 'io.mockk:mockk:1.12.2'
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit5_version"
	testRuntimeOnly "org.junit.vintage:junit-vintage-engine:$junit5_version"
	androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
}
